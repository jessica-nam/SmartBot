postID,question,views,votes,answers,answer,url
930397,How do I get the last element of a list?,2.9m,2658,25,"some_list[-1] is the shortest and most Pythonic.In fact, you can do much more with this syntax. The some_list[-n] syntax gets the nth-to-last element. So some_list[-1] gets the last element, some_list[-2] gets the second to last, etc, all the way down to some_list[-len(some_list)], which gives you the first element.You can also set list elements in this way. For instance:Note that getting a list item by index will raise an IndexError if the expected item doesn't exist. This means that some_list[-1] will raise an exception if some_list is empty, because an empty list can't have a last element.",https://stackoverflow.com/questions/930397
72899,How do I sort a list of dictionaries by a value of the dictionary?,1.2m,2627,19,"The sorted() function takes a key= parameterAlternatively, you can use operator.itemgetter instead of defining the function yourselfFor completeness, add reverse=True to sort in descending order",https://stackoverflow.com/questions/72899
2720014,How to upgrade all Python packages with pip?,1.7m,2607,54,"There isn't a built-in flag yet. Starting with pip version 22.3, the --outdated and --format=freeze have become mutually exclusive. Use Python, to parse the json output:If you are using pip<22.3 you can use:For older versions of pip:The grep is to skip editable (""-e"") package definitions, as suggested by @jawache. (Yes, you could replace grep+cut with sed or awk or perl or...).The -n1 flag for xargs prevents stopping everything if updating one package fails (thanks @andsens).Note: there are infinite potential variations for this. I'm trying to keep this answer short and simple, but please do suggest variations in the comments!",https://stackoverflow.com/questions/2720014
663171,How do I get a substring of a string in Python?,3.6m,2574,16,"Python calls this concept ""slicing"" and it works on more than just strings. Take a look here for a comprehensive introduction.",https://stackoverflow.com/questions/663171
6797984,How do I lowercase a string in Python?,3.0m,2473,5,Use str.lower():,https://stackoverflow.com/questions/6797984
68645,Class (static) variables and methods,1.6m,2451,27,"Variables declared inside the class definition, but not inside a method are class or static variables:As @millerdev points out, this creates a class-level i variable, but this is distinct from any instance-level i variable, so you could haveThis is different from C++ and Java, but not so different from C#, where a static member can't be accessed using a reference to an instance.See what the Python tutorial has to say on the subject of classes and class objects.@Steve Johnson has already answered regarding static methods, also documented under ""Built-in Functions"" in the Python Library Reference.@beidy recommends classmethods over staticmethod, as the method then receives the class type as the first argument.",https://stackoverflow.com/questions/68645
493386,How to print without a newline or space,2.4m,2329,25,"In Python 3, you can use the sep= and end= parameters of the print function:To not add a newline to the end of the string:To not add a space between all the function arguments you want to print:You can pass any string to either parameter, and you can use both parameters at the same time.If you are having trouble with buffering, you can flush the output by adding flush=True keyword argument:From Python 2.6 you can either import the print function from Python 3 using the __future__ module:which allows you to use the Python 3 solution above.However, note that the flush keyword is not available in the version of the print function imported from __future__ in Python 2; it only works in Python 3, more specifically 3.3 and later. In earlier versions you'll still need to flush manually with a call to sys.stdout.flush(). You'll also have to rewrite all other print statements in the file where you do this import.Or you can use sys.stdout.write()You may also need to callto ensure stdout is flushed immediately.",https://stackoverflow.com/questions/493386
990754,How to leave/exit/deactivate a Python virtualenv,1.8m,2314,14,"Usually, activating a virtualenv gives you a shell function named:which puts things back to normal.I have just looked specifically again at the code for virtualenvwrapper, and, yes, it too supports deactivate as the way to escape from all virtualenvs.If you are trying to leave an Anaconda environment, the command depends upon your version of conda. Recent versions (like 4.6) install a conda function directly in your shell, in which case you run:Older conda versions instead implement deactivation using a stand-alone script:",https://stackoverflow.com/questions/990754
3061,Calling a function of a module by using its name (a string),1.0m,2311,18,"Given a module foo with method bar:getattr can similarly be used on class instance bound methods, module-level methods, class methods... the list goes on.",https://stackoverflow.com/questions/3061
4383571,Importing files from different folder,2.9m,2297,37,"Note: This answer was intended for a very specific question. For most programmers coming here from a search engine, this is not the answer you are looking for. Typically you would structure your files into packages (see other answers) instead of modifying the search path.By default, you can't. When importing a file, Python only searches the directory that the entry-point script is running from and sys.path which includes locations such as the package installation directory (it's actually a little more complex than this, but this covers most cases).However, you can add to the Python path at runtime:",https://stackoverflow.com/questions/4383571
610883,How do I check if an object has an attribute?,1.3m,2294,16,"Try hasattr():See zweiterlinde's answer below, who offers good advice about asking forgiveness! A very pythonic approach!The general practice in python is that, if the property is likely to be there most of the time, simply call it and either let the exception propagate, or trap it with a try/except block. This will likely be faster than hasattr. If the property is likely to not be there most of the time, or you're not sure, using hasattr will probably be faster than repeatedly falling into an exception block.",https://stackoverflow.com/questions/610883
306400,How can I randomly select an item from a list?,2.0m,2267,17,"Use random.choice():For cryptographically secure random choices (e.g., for generating a passphrase from a wordlist), use secrets.choice():secrets is new in Python 3.6. On older versions of Python you can use the random.SystemRandom class:",https://stackoverflow.com/questions/306400
5466451,How do I print curly-brace characters in a string while using .format?,851k,2255,23,"You need to double the {{ and }}:Here's the relevant part of the Python documentation for format string syntax:Format strings contain “replacement fields” surrounded by curly braces {}. Anything that is not contained in braces is considered literal text, which is copied unchanged to the output. If you need to include a brace character in the literal text, it can be escaped by doubling: {{ and }}.",https://stackoverflow.com/questions/5466451
455612,Limiting floats to two decimal points,4.9m,2231,34,"You are running into the old problem with floating point numbers that not all numbers can be represented exactly. The command line is just showing you the full floating point form from memory.With floating point representation, your rounded version is the same number. Since computers are binary, they store floating point numbers as an integer and then divide it by a power of two so 13.95 will be represented in a similar fashion to 125650429603636838/(2**53).Double precision numbers have 53 bits (16 digits) of precision and regular floats have 24 bits (8 digits) of precision. The floating point type in Python uses double precision to store the values.For example,If you are after only two decimal places (to display a currency value, for example), then you have a couple of better choices:",https://stackoverflow.com/questions/455612
1712227,How do I get the number of elements in a list (length of a list) in Python?,3.7m,2215,12,The len() function can be used with several different types in Python - both built-in types and library types. For example:,https://stackoverflow.com/questions/1712227
9371238,Why is reading lines from stdin much slower in C++ than Python?,303k,2129,10,"By default, cin is synchronized with stdio, which causes it to avoid any input buffering.  If you add this to the top of your main, you should see much better performance:Normally, when an input stream is buffered, instead of reading one character at a time, the stream will be read in larger chunks.  This reduces the number of system calls, which are typically relatively expensive.  However, since the FILE* based stdio and iostreams often have separate implementations and therefore separate buffers, this could lead to a problem if both were used together.  For example:If more input was read by cin than it actually needed, then the second integer value wouldn't be available for the scanf function, which has its own independent buffer.  This would lead to unexpected results.To avoid this, by default, streams are synchronized with stdio.  One common way to achieve this is to have cin read each character one at a time as needed using stdio functions.  Unfortunately, this introduces a lot of overhead.  For small amounts of input, this isn't a big problem, but when you are reading millions of lines, the performance penalty is significant.Fortunately, the library designers decided that you should also be able to disable this feature to get improved performance if you knew what you were doing, so they provided the sync_with_stdio method. From this link (emphasis added):If the synchronization is turned off, the C++ standard streams are allowed to buffer their I/O independently, which may be considerably faster in some cases.",https://stackoverflow.com/questions/9371238
627435,How to remove an element from a list by index,3.7m,2123,18,Use del and specify the index of the element you want to delete:Also supports slices:Here is the section from the tutorial.,https://stackoverflow.com/questions/627435
101754,Is there a way to run Python on Android?,736k,2085,23,"One way is to use Kivy:Open source Python library for rapid development of applications
  that make use of innovative user interfaces, such as multi-touch apps.Kivy runs on Linux, Windows, OS X, Android and iOS. You can run the same [python] code on all supported platforms.Kivy Showcase app",https://stackoverflow.com/questions/101754
2225038,Determine the type of an object? [duplicate],2.1m,2081,15,"There are two built-in functions that help you identify the type of an object. You can use type()  if you need the exact type of an object, and isinstance() to check an object’s type against something. Usually, you want to use isinstance() most of the times since it is very robust and also supports type inheritance.To get the actual type of an object, you use the built-in type() function. Passing an object as the only parameter will return the type object of that object:This of course also works for custom types:Note that type() will only return the immediate type of the object, but won’t be able to tell you about type inheritance.To cover that, you should use the isinstance function. This of course also works for built-in types:isinstance() is usually the preferred way to ensure the type of an object because it will also accept derived types. So unless you actually need the type object (for whatever reason), using isinstance() is preferred over type().The second parameter of isinstance() also accepts a tuple of types, so it’s possible to check for multiple types at once. isinstance will then return true, if the object is of any of those types:",https://stackoverflow.com/questions/2225038
2600191,How do I count the occurrences of a list item?,2.7m,2070,29,"If you only want a single item's count, use the count method:Each count call goes over the entire list of n elements. Calling count in a loop n times means n * n total checks, which can be catastrophic for performance.If you want to count multiple items, use Counter, which only does n total checks.",https://stackoverflow.com/questions/2600191
402504,How to determine a Python variable's type?,3.6m,2070,21,"Use the type() builtin function:To check if a variable is of a given type, use isinstance:Note that Python doesn't have the same types as C/C++, which appears to be your question.",https://stackoverflow.com/questions/402504
13411544,Delete a column from a Pandas DataFrame,3.4m,2051,20,"The best way to do this in Pandas is to use drop:where 1 is the axis number (0 for rows and 1 for columns.)To delete the column without having to reassign df you can do:Finally, to drop by column number instead of by column label, try this to delete, e.g. the 1st, 2nd and 4th columns:Also working with ""text"" syntax for the columns:Note: Introduced in v0.21.0 (October 27, 2017), the drop() method accepts index/columns keywords as an alternative to specifying the axis.So we can now just do:",https://stackoverflow.com/questions/13411544
5844672,Delete an element from a dictionary,2.5m,2042,18,"The del statement removes an element:Note that this mutates the existing dictionary, so the contents of the dictionary changes for anybody else who has a reference to the same instance. To return a new dictionary, make a copy of the dictionary:The dict() constructor makes a shallow copy. To make a deep copy, see the copy module.Note that making a copy for every dict del/assignment/etc. means you're going from constant time to linear time, and also using linear space. For small dicts, this is not a problem. But if you're planning to make lots of copies of large dicts, you probably want a different data structure, like a HAMT (as described in this answer).",https://stackoverflow.com/questions/5844672
493819,Why is it string.join(list) instead of list.join(string)?,1.4m,2034,11,"It's because any iterable can be joined (e.g, list, tuple, dict, set), but its contents and the ""joiner"" must be strings.For example:Using something other than strings will raise the following error:TypeError: sequence item 0: expected str instance, int found",https://stackoverflow.com/questions/493819
3277503,How to read a file line-by-line into a list?,4.6m,2025,28,"This code will read the entire file into memory and remove all whitespace characters (newlines and spaces) from the end of each line:If you're working with a large file, then you should instead read and process it line-by-line:In Python 3.8 and up you can use a while loop with the walrus operator like so:Depending on what you plan to do with your file and how it was encoded, you may also want to manually set the access mode and character encoding:",https://stackoverflow.com/questions/3277503
339007,How do I pad a string with zeroes?,1.4m,1995,19,To pad strings:To pad numbers:String formatting documentation.,https://stackoverflow.com/questions/339007
9573244,How to check if the string is empty?,2.8m,1988,25,"Empty strings are ""falsy"" (python 2 or python 3 reference), which means they are considered false in a Boolean context, so you can just do this:This is the preferred way if you know that your variable is a string.  If your variable could also be some other type then you should use:See the documentation on Truth Value Testing for other values that are false in Boolean contexts.",https://stackoverflow.com/questions/9573244
275018,How can I remove a trailing newline?,2.3m,1967,27,"Try the method rstrip() (see doc Python 2 and Python 3)Python's rstrip() method strips all kinds of trailing whitespace by default, not just one newline as Perl does with chomp.To strip only newlines:In addition to rstrip(), there are also the methods strip() and lstrip(). Here is an example with the three of them:",https://stackoverflow.com/questions/275018
4706499,How do I append to a file?,2.0m,1963,13,"Set the mode in open() to ""a"" (append) instead of ""w"" (write):The documentation lists all the available modes.",https://stackoverflow.com/questions/4706499
735975,Static methods in Python?,1.2m,1963,12,"Yep, using the staticmethod decorator:Note that some code might use the old method of defining a static method, using staticmethod as a function rather than a decorator. This should only be used if you have to support ancient versions of Python (2.2 and 2.3):This is entirely identical to the first example (using @staticmethod), just not using the nice decorator syntax.Finally, use staticmethod sparingly! There are very few situations where static-methods are necessary in Python, and I've seen them used many times where a separate ""top-level"" function would have been clearer.The following is verbatim from the documentation::A static method does not receive an implicit first argument. To declare a static method, use this idiom:The @staticmethod form is a function decorator – see the description of function definitions in Function definitions for details.It can be called either on the class (such as C.f()) or on an instance (such as C().f()). The instance is ignored except for its class.Static methods in Python are similar to those found in Java or C++. For a more advanced concept, see classmethod().For more information on static methods, consult the documentation on the standard type hierarchy in The standard type hierarchy.New in version 2.2.Changed in version 2.4: Function decorator syntax added.",https://stackoverflow.com/questions/735975
7370801,How do I measure elapsed time in Python?,2.4m,1914,41,"Use time.time() to measure the elapsed wall-clock time between two points:This gives the execution time in seconds.Another option since Python 3.3 might be to use perf_counter or process_time, depending on your requirements. Before 3.3 it was recommended to use time.clock (thanks Amber). However, it is currently deprecated:On Unix, return the current processor time as a floating point number
expressed in seconds. The precision, and in fact the very definition
of the meaning of “processor time”, depends on that of the C function
of the same name.On Windows, this function returns wall-clock seconds elapsed since the
first call to this function, as a floating point number, based on the
Win32 function QueryPerformanceCounter(). The resolution is typically
better than one microsecond.Deprecated since version 3.3: The behaviour of this function depends
on the platform: use perf_counter() or process_time() instead,
depending on your requirements, to have a well defined behaviour.",https://stackoverflow.com/questions/7370801
354038,How do I check if a string represents a number (float or int)?,1.6m,1892,39,"For non-negative (unsigned) integers only, use isdigit():Documentation for isdigit(): Python2, Python3For Python 2 Unicode strings:
isnumeric().",https://stackoverflow.com/questions/354038
41573587,"What is the difference between venv, pyvenv, pyenv, virtualenv, virtualenvwrapper, pipenv, etc?",498k,1882,7,"This is my personal recommendation for beginners: start by learning virtualenv and pip, tools which work with both Python 2 and 3 and in a variety of situations, and pick up other tools once you start needing them.Now on to the answer to the question: what is the difference between these simalarly named things: venv, virtualenv, etc?virtualenv is a very popular tool that creates isolated Python environments for Python libraries. If you're not familiar with this tool, I highly recommend learning it, as it is a very useful tool.It works by installing a bunch of files in a directory (eg: env/), and then modifying the PATH environment variable to prefix it with a custom bin directory (eg: env/bin/). An exact copy of the python or python3 binary is placed in this directory, but Python is programmed to look for libraries relative to its path first, in the environment directory. It's not part of Python's standard library, but is officially blessed by the PyPA (Python Packaging Authority). Once activated, you can install packages in the virtual environment using pip.pyenv is used to isolate Python versions. For example, you may want to test your code against Python 2.7, 3.6, 3.7 and 3.8, so you'll need a way to switch between them. Once activated, it prefixes the PATH environment variable with ~/.pyenv/shims, where there are special files matching the Python commands (python, pip). These are not copies of the Python-shipped commands; they are special scripts that decide on the fly which version of Python to run based on the PYENV_VERSION environment variable, or the .python-version file, or the ~/.pyenv/version file. pyenv also makes the process of downloading and installing multiple Python versions easier, using the command pyenv install.pyenv-virtualenv is a plugin for pyenv by the same author as pyenv, to allow you to use pyenv and virtualenv at the same time conveniently. However, if you're using Python 3.3 or later, pyenv-virtualenv will try to run python -m venv if it is available, instead of virtualenv. You can use virtualenv and pyenv together without pyenv-virtualenv, if you don't want the convenience features.virtualenvwrapper is a set of extensions to virtualenv (see docs). It gives you commands like mkvirtualenv, lssitepackages, and especially workon for switching between different virtualenv directories. This tool is especially useful if you want multiple virtualenv directories.pyenv-virtualenvwrapper is a plugin for pyenv by the same author as pyenv, to conveniently integrate virtualenvwrapper into pyenv.pipenv aims to combine Pipfile, pip and virtualenv into one command on the command-line. The virtualenv directory typically gets placed in ~/.local/share/virtualenvs/XXX, with XXX being a hash of the path of the project directory. This is different from virtualenv, where the directory is typically in the current working directory. pipenv is meant to be used when developing Python applications (as opposed to libraries). There are alternatives to pipenv, such as poetry, which I won't list here since this question is only about the packages that are similarly named.pyvenv (not to be confused with pyenv in the previous section) is a script shipped with Python 3.3 to 3.7. It was removed from Python 3.8 as it had problems (not to mention the confusing name). Running python3 -m venv has exactly the same effect as pyvenv.venv is a package shipped with Python 3, which you can run using python3 -m venv (although for some reason some distros separate it out into a separate distro package, such as python3-venv on Ubuntu/Debian). It serves the same purpose as virtualenv, but only has a subset of its features (see a comparison here). virtualenv continues to be more popular than venv, especially since the former supports both Python 2 and 3.",https://stackoverflow.com/questions/41573587
510972,Getting the class name of an instance,1.4m,1867,12,"Have you tried the __name__ attribute of the class? ie type(x).__name__ will give you the name of the class, which I think is what you want.If you're still using Python 2, note that the above method works with new-style classes only (in Python 3+ all classes are ""new-style"" classes). Your code might use some old-style classes. The following works for both:",https://stackoverflow.com/questions/510972
10660435,How do I split the definition of a long string over multiple lines?,1.8m,1854,30,"Are you talking about multi-line strings? Easy, use triple quotes to start and end them.You can use single quotes too (3 of them of course at start and end) and treat the resulting string s just like any other string.NOTE: Just as with any string, anything between the starting and ending quotes becomes part of the string, so this example has a leading blank (as pointed out by @root45). This string will also contain both blanks and newlines.I.e.,:Finally, one can also construct long lines in Python like this:which will not include any extra blanks or newlines (this is a deliberate example showing what the effect of skipping blanks will result in):No commas required, simply place the strings to be joined together into a pair of parenthesis and be sure to account for any needed blanks and newlines.",https://stackoverflow.com/questions/10660435
12179271,Meaning of @classmethod and @staticmethod for beginner [duplicate],750k,1852,12,"Though classmethod and staticmethod are quite similar, there's a slight difference in usage for both entities: classmethod must have a reference to a class object as the first parameter, whereas staticmethod can have no parameters at all.Let's assume an example of a class, dealing with date information (this will be our boilerplate):This class obviously could be used to store information about certain dates (without timezone information; let's assume all dates are presented in UTC).Here we have __init__, a typical initializer of Python class instances, which receives arguments as a typical instance method, having the first non-optional argument (self) that holds a reference to a newly created instance.Class MethodWe have some tasks that can be nicely done using classmethods.Let's assume that we want to create a lot of Date class instances having date information coming from an outer source encoded as a string with format 'dd-mm-yyyy'. Suppose we have to do this in different places in the source code of our project.So what we must do here is:This will look like:For this purpose, C++ can implement such a feature with overloading, but Python lacks this overloading. Instead, we can use classmethod. Let's create another constructor.Let's look more carefully at the above implementation, and review what advantages we have here:Static methodWhat about staticmethod? It's pretty similar to classmethod but doesn't take any obligatory parameters (like a class method or instance method does).Let's look at the next use case.We have a date string that we want to validate somehow. This task is also logically bound to the Date class we've used so far, but doesn't require instantiation of it.Here is where staticmethod can be useful. Let's look at the next piece of code:So, as we can see from usage of staticmethod, we don't have any access to what the class is---it's basically just a function,  called syntactically like a method, but without access to the object and its internals (fields and other methods), which classmethod does have.",https://stackoverflow.com/questions/12179271
5226311,Installing specific package version with pip,2.2m,1809,12,"TL;DR:What these options mean:For more information, see pip install --helpFirst, I see two issues with what you're trying to do. Since you already have an installed version, you should either uninstall the current existing driver or use pip install -I MySQL_python==1.2.2However, you'll soon find out that this doesn't work. If you look at pip's installation log, or if you do a pip install -Iv MySQL_python==1.2.2 you'll find that the PyPI URL link does not work for MySQL_python v1.2.2. You can verify this here: http://pypi.python.org/pypi/MySQL-python/1.2.2The download link 404s and the fallback URL links are re-directing infinitely due to sourceforge.net's recent upgrade and PyPI's stale URL.So to properly install the driver, you can follow these steps:",https://stackoverflow.com/questions/5226311
3996904,Generate random integers between 0 and 9,2.6m,1798,22,Try random.randrange:,https://stackoverflow.com/questions/3996904
12943819,How to prettyprint a JSON file?,2.0m,1768,16,"Use the indent= parameter of json.dump() or json.dumps() to specify how many spaces to indent by:To parse a file, use json.load():",https://stackoverflow.com/questions/12943819
152580,What's the canonical way to check for type in Python?,1.3m,1750,13,"Use isinstance to check if o is an instance of str or any subclass of str:To check if the type of o is exactly str, excluding subclasses of str:Another alternative to the above:See Built-in Functions in the Python Library Reference for relevant information.For Python 2, this is a better way to check if o is a string:because this will also catch Unicode strings. unicode is not a subclass of str; whereas, both str and unicode are subclasses of basestring. In Python 3, basestring no longer exists since there's a strict separation of strings (str) and binary data (bytes).Alternatively, isinstance accepts a tuple of classes. This will return True if o is an instance of any subclass of any of (str, unicode):",https://stackoverflow.com/questions/152580
541390,Extracting extension from filename in Python,1.4m,1727,32,"Use os.path.splitext:Unlike most manual string-splitting attempts, os.path.splitext will correctly treat /a/b.c/d as having no extension instead of having extension .c/d, and it will treat .bashrc as having no extension instead of having extension .bashrc:",https://stackoverflow.com/questions/541390
1450393,How do I read from stdin?,2.1m,1719,24,"Use the fileinput module:fileinput will loop through all the lines in the input specified as file names given in command-line arguments, or the standard input if no arguments are provided.Note: line will contain a trailing newline; to remove it use line.rstrip().",https://stackoverflow.com/questions/1450393
60208,Replacements for switch statement in Python?,2.2m,1717,44,"The original answer below was written in 2008. Since then, Python 3.10 (2021) introduced the match-case statement which provides a first-class implementation of a ""switch"" for Python. For example:The match-case statement is considerably more powerful than this simple example.You could use a dictionary:",https://stackoverflow.com/questions/60208
1301346,What is the meaning of single and double underscore before an object name?,664k,1715,18,"In a class, names with a leading underscore indicate to other programmers that the attribute or method is intended to be be used inside that class. However, privacy is not enforced in any way.
Using leading underscores for functions in a module indicates it should not be imported from somewhere else.From the PEP-8 style guide:_single_leading_underscore: weak ""internal use"" indicator. E.g. from M import * does not import objects whose name starts with an underscore.From the Python docs:Any identifier of the form __spam (at least two leading underscores, at most one trailing underscore) is textually replaced with _classname__spam, where classname is the current class name with leading underscore(s) stripped. This mangling is done without regard to the syntactic position of the identifier, so it can be used to define class-private instance and class variables, methods, variables stored in globals, and even variables stored in instances. private to this class on instances of other classes.And a warning from the same page:Name mangling is intended to give classes an easy way to define “private” instance variables and methods, without having to worry about instance variables defined by derived classes, or mucking with instance variables by code outside the class. Note that the mangling rules are designed mostly to avoid accidents; it still is possible for a determined soul to access or modify a variable that is considered private.",https://stackoverflow.com/questions/1301346
15943769,How do I get the row count of a Pandas DataFrame?,3.7m,1713,17,"For a dataframe df, one can use any of the following:Code to reproduce the plot:",https://stackoverflow.com/questions/15943769
1319615,Proper way to declare custom exceptions in modern Python?,951k,1708,15,"Maybe I missed the question, but why not:To override something (or pass extra args), do this:That way you could pass dict of error messages to the second param, and get to it later with e.errors.In Python 2, you have to use this slightly more complex form of super():",https://stackoverflow.com/questions/1319615
21530577,fatal error: Python.h: No such file or directory,1.5m,1701,35,"Looks like you haven't properly installed the header files and static libraries for python dev.  Use your package manager to install them system-wide.For apt (Ubuntu, Debian...):For yum (CentOS, RHEL...):For dnf (Fedora...):For zypper (openSUSE...):For apk (Alpine...):For apt-cyg (Cygwin...):Note: python3-dev does not automatically cover all minor versions of python3, if you are using e.g. python 3.8 you may need to install python3.8-dev.",https://stackoverflow.com/questions/21530577
5574702,How do I print to stderr in Python?,1.2m,1689,17,"I found this to be the only one short, flexible, portable and readable:The optional function eprint saves some repetition. It can be used in the same way as the standard print function:",https://stackoverflow.com/questions/5574702
2257441,Random string generation with upper case letters and digits,1.3m,1674,36,"Answer in one line:or even shorter starting with Python 3.6 using random.choices():A cryptographically more secure version: see this postIn details, with a clean function for further reuse:How does it work ?We import string, a module that contains sequences of common ASCII characters, and random, a module that deals with random generation.string.ascii_uppercase + string.digits just concatenates the list of characters representing uppercase ASCII chars and digits:Then we use a list comprehension to create a list of 'n' elements:In the example above, we use [ to create the list, but we don't in the id_generator function so Python doesn't create the list in memory, but generates the elements on the fly, one by one (more about this here).Instead of asking to create 'n' times the string elem, we will ask Python to create 'n' times a random character, picked from a sequence of characters:Therefore random.choice(chars) for _ in range(size) really is creating a sequence of size characters. Characters that are randomly picked from chars:Then we just join them with an empty string so the sequence becomes a string:",https://stackoverflow.com/questions/2257441
17271319,How do I install pip on macOS or OS X?,2.8m,1672,21,"TLDR. On any modern Mac python3 -m ensurepipthen pip3 --version to check.pip's documentation lists the supported mechanisms to install it:
https://pip.pypa.io/en/stable/installation/#supported-methodsIt is generally recommended to avoid installing pip on the OS-provided python commands, and to install Python via the official installers or using something like Homebrew or pyenv.Python 3.4+ will have ensurepip, so if you're unable to run python3 -m pip -- run python3 -m ensurepip and it'll install pip for you.If you're using an end-of-life version of Python, you can use get-pip.py instead.Old answer (outdated, and results in a broken installation)If you need admin privileges to run this, try:",https://stackoverflow.com/questions/17271319
